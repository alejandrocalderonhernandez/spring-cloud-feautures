content_assist_favorite_static_members=org.assertj.core.api.Assertions.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*;org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.*;org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*;org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*;org.springframework.test.web.client.match.MockRestRequestMatchers.*;org.springframework.test.web.client.response.MockRestResponseCreators.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;org.hamcrest.CoreMatchers.*;org.junit.Assert.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="org.springframework.security.core.userdetails.UserDetails"><rhs name\="org.springframework.security.core.userdetails.User"/></lhs><lhs name\="org.springframework.security.crypto.password.PasswordEncoder"><rhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/></lhs><lhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"><rhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.TokenEnhancer"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/><rhs name\="org.springframework.security.oauth2.provider.token.TokenEnhancerChain"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.AccessTokenConverter"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.TokenStore"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtTokenStore"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.store.JwtTokenStore"><rhs name\="org.springframework.security.oauth2.provider.token.store.JwtTokenStore"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="org.springframework.security.oauth2.provider.token.TokenEnhancerChain"><rhs name\="org.springframework.security.oauth2.provider.token.TokenEnhancerChain"/></lhs><lhs name\="org.springframework.web.client.RestOperations"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.InterceptingHttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.HttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.web.client.RestTemplate"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.core.env.PropertySource"><rhs name\="org.springframework.core.env.PropertiesPropertySource"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/><rhs name\="java.lang.String"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="org.springframework.web.cors.CorsConfiguration"><rhs name\="org.springframework.web.cors.CorsConfiguration"/></lhs><lhs name\="org.springframework.web.cors.CorsConfigurationSource"><rhs name\="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/></lhs><lhs name\="org.springframework.web.cors.UrlBasedCorsConfigurationSource"><rhs name\="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.chrono.ChronoLocalDateTime"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="org.springframework.http.HttpEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="org.springframework.http.ResponseEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="com.example.consumer.model.Product"><rhs name\="com.example.consumer.model.Product"/></lhs><lhs name\="org.springframework.kafka.core.ConsumerFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/></lhs><lhs name\="org.springframework.kafka.core.ProducerFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.context.ApplicationListener"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="java.util.EventListener"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.kafka.core.KafkaResourceFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/></lhs><lhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/></lhs><lhs name\="org.springframework.kafka.core.KafkaOperations"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.kafka.core.KafkaTemplate"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.security.oauth2.provider.ClientDetails"><rhs name\="org.springframework.security.oauth2.provider.client.BaseClientDetails"/></lhs></history>
content_assist_number_of_computers=15
eclipse.preferences.version=1
java_bracket=255,255,255
java_comment_task_tag=0,153,153
java_default=216,216,216
java_doc_default=184,171,118
java_doc_keyword=184,171,118
java_doc_link=184,171,118
java_doc_tag=184,171,118
java_keyword=97, 199, 145
java_keyword_return=97, 199, 145
java_multi_line_comment=0,153,153
java_operator=255, 254, 254
java_single_line_comment=0,153,153
java_string=177, 141, 184
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=21
pf_coloring_argument=97, 199, 145
pf_coloring_assignment=216,216,216
pf_coloring_comment=0,153,153
pf_coloring_key=216,216,216
pf_coloring_value=177, 141, 184
semanticHighlighting.abstractMethodInvocation.color=190,214,255
semanticHighlighting.annotation.color=8, 252, 236
semanticHighlighting.class.bold=false
semanticHighlighting.class.color=0, 194, 185
semanticHighlighting.class.strikethrough=false
semanticHighlighting.class.underline=false
semanticHighlighting.deprecatedMember.color=255, 255, 255
semanticHighlighting.enum.color=0, 194, 185
semanticHighlighting.field.color=28, 186, 148
semanticHighlighting.inheritedMethodInvocation.color=190,214,255
semanticHighlighting.interface.color=0, 194, 185
semanticHighlighting.localVariable.color=28, 186, 148
semanticHighlighting.localVariableDeclaration.color=28, 186, 148
semanticHighlighting.method.color=102, 131, 237
semanticHighlighting.methodDeclarationName.color=102, 131, 237
semanticHighlighting.number.color=177, 141, 184
semanticHighlighting.staticField.color=153, 169, 194
semanticHighlighting.staticFinalField.color=153, 169, 194
semanticHighlighting.staticMethodInvocation.color=153, 169, 194
semanticHighlighting.staticMethodInvocation.italic=true
semanticHighlighting.typeArgument.color=109,240,247
semanticHighlighting.typeParameter.color=109,240,247
sourceHoverBackgroundColor=0,0,0
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
